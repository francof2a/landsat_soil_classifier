-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fpga_ANN50x50 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_V : IN STD_LOGIC_VECTOR (863 downto 0);
    input_V_ap_vld : IN STD_LOGIC;
    layer7_out_V : OUT STD_LOGIC_VECTOR (143 downto 0);
    layer7_out_V_ap_vld : OUT STD_LOGIC;
    const_size_in_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    const_size_in_1_ap_vld : OUT STD_LOGIC;
    const_size_out_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    const_size_out_1_ap_vld : OUT STD_LOGIC );
end;


architecture behav of fpga_ANN50x50 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "fpga_ANN50x50,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xazu7eg-fbvb900-1-i,HLS_INPUT_CLOCK=24.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=19.540000,HLS_SYN_LAT=11,HLS_SYN_TPT=4,HLS_SYN_MEM=18,HLS_SYN_DSP=1150,HLS_SYN_FF=15386,HLS_SYN_LUT=154511,HLS_VERSION=2019_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv864_lc_1 : STD_LOGIC_VECTOR (863 downto
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv16_24 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100100";
    constant ap_const_lv16_6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000110";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state12_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal input_V_preg : STD_LOGIC_VECTOR (863 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal input_V_in_sig : STD_LOGIC_VECTOR (863 downto 0);
    signal input_V_ap_vld_preg : STD_LOGIC := '0';
    signal input_V_ap_vld_in_sig : STD_LOGIC;
    signal input_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state11_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal grp_dense_latency_0_0_0_1_fu_83_ap_start : STD_LOGIC;
    signal grp_dense_latency_0_0_0_1_fu_83_ap_done : STD_LOGIC;
    signal grp_dense_latency_0_0_0_1_fu_83_ap_idle : STD_LOGIC;
    signal grp_dense_latency_0_0_0_1_fu_83_ap_ready : STD_LOGIC;
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_3 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_4 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_5 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_6 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_7 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_8 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_9 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_10 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_11 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_12 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_13 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_14 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_15 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_16 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_17 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_18 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_19 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_20 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_21 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_22 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_23 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_24 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_25 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_26 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_27 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_28 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_29 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_30 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_31 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_32 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_33 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_34 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_35 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_36 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_37 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_38 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_39 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_40 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_41 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_42 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_43 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_44 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_45 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_46 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_47 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_48 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_return_49 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_ce : STD_LOGIC;
    signal ap_block_state4_pp0_stage3_iter0_ignore_call113 : BOOLEAN;
    signal ap_block_state8_pp0_stage3_iter1_ignore_call113 : BOOLEAN;
    signal ap_block_state12_pp0_stage3_iter2_ignore_call113 : BOOLEAN;
    signal ap_block_pp0_stage3_11001_ignoreCallOp119 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call113 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1_ignore_call113 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter2_ignore_call113 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp120 : BOOLEAN;
    signal ap_block_state2_pp0_stage1_iter0_ignore_call113 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1_ignore_call113 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter2_ignore_call113 : BOOLEAN;
    signal ap_block_pp0_stage1_11001_ignoreCallOp121 : BOOLEAN;
    signal ap_block_state3_pp0_stage2_iter0_ignore_call113 : BOOLEAN;
    signal ap_block_state7_pp0_stage2_iter1_ignore_call113 : BOOLEAN;
    signal ap_block_state11_pp0_stage2_iter2_ignore_call113 : BOOLEAN;
    signal ap_block_pp0_stage2_11001_ignoreCallOp122 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal grp_dense_latency_0_0_0_2_fu_137_ap_start : STD_LOGIC;
    signal grp_dense_latency_0_0_0_2_fu_137_ap_done : STD_LOGIC;
    signal grp_dense_latency_0_0_0_2_fu_137_ap_idle : STD_LOGIC;
    signal grp_dense_latency_0_0_0_2_fu_137_ap_ready : STD_LOGIC;
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_3 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_4 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_5 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_6 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_7 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_8 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_9 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_10 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_11 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_12 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_13 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_14 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_15 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_16 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_17 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_18 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_19 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_20 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_21 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_22 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_23 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_24 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_25 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_26 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_27 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_28 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_29 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_30 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_31 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_32 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_33 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_34 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_35 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_36 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_37 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_38 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_39 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_40 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_41 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_42 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_43 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_44 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_45 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_46 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_47 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_48 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_return_49 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_2_fu_137_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call11 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1_ignore_call11 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter2_ignore_call11 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp14 : BOOLEAN;
    signal ap_block_state2_pp0_stage1_iter0_ignore_call11 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1_ignore_call11 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter2_ignore_call11 : BOOLEAN;
    signal ap_block_pp0_stage1_11001_ignoreCallOp15 : BOOLEAN;
    signal ap_block_state3_pp0_stage2_iter0_ignore_call11 : BOOLEAN;
    signal ap_block_state7_pp0_stage2_iter1_ignore_call11 : BOOLEAN;
    signal ap_block_state11_pp0_stage2_iter2_ignore_call11 : BOOLEAN;
    signal ap_block_pp0_stage2_11001_ignoreCallOp16 : BOOLEAN;
    signal ap_block_state4_pp0_stage3_iter0_ignore_call11 : BOOLEAN;
    signal ap_block_state8_pp0_stage3_iter1_ignore_call11 : BOOLEAN;
    signal ap_block_state12_pp0_stage3_iter2_ignore_call11 : BOOLEAN;
    signal ap_block_pp0_stage3_11001_ignoreCallOp17 : BOOLEAN;
    signal grp_dense_latency_0_0_0_s_fu_143_ap_start : STD_LOGIC;
    signal grp_dense_latency_0_0_0_s_fu_143_ap_done : STD_LOGIC;
    signal grp_dense_latency_0_0_0_s_fu_143_ap_idle : STD_LOGIC;
    signal grp_dense_latency_0_0_0_s_fu_143_ap_ready : STD_LOGIC;
    signal grp_dense_latency_0_0_0_s_fu_143_ap_return_0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_s_fu_143_ap_return_1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_s_fu_143_ap_return_2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_s_fu_143_ap_return_3 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_s_fu_143_ap_return_4 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_s_fu_143_ap_return_5 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_s_fu_143_ap_ce : STD_LOGIC;
    signal ap_block_state3_pp0_stage2_iter0_ignore_call215 : BOOLEAN;
    signal ap_block_state7_pp0_stage2_iter1_ignore_call215 : BOOLEAN;
    signal ap_block_state11_pp0_stage2_iter2_ignore_call215 : BOOLEAN;
    signal ap_block_pp0_stage2_11001_ignoreCallOp224 : BOOLEAN;
    signal ap_block_state4_pp0_stage3_iter0_ignore_call215 : BOOLEAN;
    signal ap_block_state8_pp0_stage3_iter1_ignore_call215 : BOOLEAN;
    signal ap_block_state12_pp0_stage3_iter2_ignore_call215 : BOOLEAN;
    signal ap_block_pp0_stage3_11001_ignoreCallOp225 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call215 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1_ignore_call215 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter2_ignore_call215 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp226 : BOOLEAN;
    signal ap_block_state2_pp0_stage1_iter0_ignore_call215 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1_ignore_call215 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter2_ignore_call215 : BOOLEAN;
    signal ap_block_pp0_stage1_11001_ignoreCallOp227 : BOOLEAN;
    signal grp_softmax_fu_197_ap_start : STD_LOGIC;
    signal grp_softmax_fu_197_ap_done : STD_LOGIC;
    signal grp_softmax_fu_197_ap_idle : STD_LOGIC;
    signal grp_softmax_fu_197_ap_ready : STD_LOGIC;
    signal grp_softmax_fu_197_ap_ce : STD_LOGIC;
    signal grp_softmax_fu_197_ap_return : STD_LOGIC_VECTOR (140 downto 0);
    signal ap_block_state2_pp0_stage1_iter0_ignore_call222 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1_ignore_call222 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter2_ignore_call222 : BOOLEAN;
    signal ap_block_pp0_stage1_11001_ignoreCallOp234 : BOOLEAN;
    signal ap_block_state3_pp0_stage2_iter0_ignore_call222 : BOOLEAN;
    signal ap_block_state7_pp0_stage2_iter1_ignore_call222 : BOOLEAN;
    signal ap_block_state11_pp0_stage2_iter2_ignore_call222 : BOOLEAN;
    signal ap_block_pp0_stage2_11001_ignoreCallOp235 : BOOLEAN;
    signal ap_block_state4_pp0_stage3_iter0_ignore_call222 : BOOLEAN;
    signal ap_block_state8_pp0_stage3_iter1_ignore_call222 : BOOLEAN;
    signal ap_block_state12_pp0_stage3_iter2_ignore_call222 : BOOLEAN;
    signal ap_block_pp0_stage3_11001_ignoreCallOp246 : BOOLEAN;
    signal call_ret1_relu_1_fu_211_ap_ready : STD_LOGIC;
    signal call_ret1_relu_1_fu_211_ap_return_0 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_1 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_2 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_3 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_4 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_5 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_6 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_7 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_8 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_9 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_10 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_11 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_12 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_13 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_14 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_15 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_16 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_17 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_18 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_19 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_20 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_21 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_22 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_23 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_24 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_25 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_26 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_27 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_28 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_29 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_30 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_31 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_32 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_33 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_34 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_35 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_36 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_37 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_38 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_39 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_40 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_41 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_42 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_43 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_44 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_45 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_46 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_47 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_48 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret1_relu_1_fu_211_ap_return_49 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_ready : STD_LOGIC;
    signal call_ret3_relu_fu_265_ap_return_0 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_1 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_2 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_3 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_4 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_5 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_6 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_7 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_8 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_9 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_10 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_11 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_12 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_13 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_14 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_15 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_16 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_17 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_18 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_19 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_20 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_21 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_22 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_23 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_24 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_25 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_26 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_27 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_28 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_29 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_30 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_31 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_32 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_33 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_34 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_35 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_36 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_37 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_38 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_39 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_40 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_41 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_42 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_43 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_44 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_45 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_46 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_47 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_48 : STD_LOGIC_VECTOR (23 downto 0);
    signal call_ret3_relu_fu_265_ap_return_49 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_dense_latency_0_0_0_1_fu_83_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal grp_dense_latency_0_0_0_s_fu_143_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal grp_softmax_fu_197_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_block_pp0_stage3_01001 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to2 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_idle_pp0_0to1 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component dense_latency_0_0_0_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_8_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_9_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_10_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_11_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_12_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_13_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_14_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_15_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_16_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_17_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_18_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_19_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_20_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_21_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_22_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_23_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_24_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_25_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_26_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_27_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_28_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_29_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_30_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_31_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_32_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_33_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_34_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_35_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_36_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_37_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_38_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_39_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_40_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_41_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_42_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_43_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_44_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_45_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_46_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_47_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_48_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_49_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_27 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_28 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_29 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_30 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_31 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_32 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_33 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_34 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_35 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_36 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_37 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_38 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_39 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_40 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_41 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_42 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_43 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_44 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_45 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_46 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_47 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_48 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_49 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component dense_latency_0_0_0_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_V_read : IN STD_LOGIC_VECTOR (863 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_27 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_28 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_29 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_30 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_31 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_32 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_33 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_34 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_35 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_36 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_37 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_38 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_39 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_40 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_41 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_42 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_43 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_44 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_45 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_46 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_47 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_48 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_49 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component dense_latency_0_0_0_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_8_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_9_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_10_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_11_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_12_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_13_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_14_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_15_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_16_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_17_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_18_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_19_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_20_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_21_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_22_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_23_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_24_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_25_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_26_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_27_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_28_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_29_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_30_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_31_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_32_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_33_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_34_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_35_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_36_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_37_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_38_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_39_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_40_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_41_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_42_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_43_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_44_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_45_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_46_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_47_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_48_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_49_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component softmax IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (140 downto 0) );
    end component;


    component relu_1 IS
    port (
        ap_ready : OUT STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_8_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_9_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_10_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_11_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_12_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_13_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_14_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_15_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_16_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_17_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_18_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_19_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_20_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_21_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_22_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_23_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_24_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_25_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_26_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_27_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_28_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_29_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_30_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_31_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_32_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_33_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_34_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_35_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_36_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_37_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_38_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_39_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_40_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_41_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_42_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_43_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_44_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_45_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_46_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_47_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_48_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_49_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_27 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_28 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_29 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_30 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_31 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_32 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_33 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_34 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_35 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_36 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_37 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_38 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_39 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_40 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_41 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_42 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_43 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_44 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_45 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_46 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_47 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_48 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_49 : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component relu IS
    port (
        ap_ready : OUT STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_8_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_9_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_10_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_11_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_12_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_13_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_14_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_15_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_16_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_17_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_18_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_19_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_20_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_21_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_22_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_23_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_24_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_25_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_26_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_27_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_28_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_29_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_30_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_31_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_32_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_33_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_34_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_35_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_36_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_37_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_38_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_39_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_40_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_41_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_42_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_43_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_44_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_45_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_46_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_47_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_48_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        data_49_V_read : IN STD_LOGIC_VECTOR (23 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_27 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_28 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_29 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_30 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_31 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_32 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_33 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_34 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_35 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_36 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_37 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_38 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_39 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_40 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_41 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_42 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_43 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_44 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_45 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_46 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_47 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_48 : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_return_49 : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;



begin
    grp_dense_latency_0_0_0_1_fu_83 : component dense_latency_0_0_0_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dense_latency_0_0_0_1_fu_83_ap_start,
        ap_done => grp_dense_latency_0_0_0_1_fu_83_ap_done,
        ap_idle => grp_dense_latency_0_0_0_1_fu_83_ap_idle,
        ap_ready => grp_dense_latency_0_0_0_1_fu_83_ap_ready,
        data_0_V_read => call_ret1_relu_1_fu_211_ap_return_0,
        data_1_V_read => call_ret1_relu_1_fu_211_ap_return_1,
        data_2_V_read => call_ret1_relu_1_fu_211_ap_return_2,
        data_3_V_read => call_ret1_relu_1_fu_211_ap_return_3,
        data_4_V_read => call_ret1_relu_1_fu_211_ap_return_4,
        data_5_V_read => call_ret1_relu_1_fu_211_ap_return_5,
        data_6_V_read => call_ret1_relu_1_fu_211_ap_return_6,
        data_7_V_read => call_ret1_relu_1_fu_211_ap_return_7,
        data_8_V_read => call_ret1_relu_1_fu_211_ap_return_8,
        data_9_V_read => call_ret1_relu_1_fu_211_ap_return_9,
        data_10_V_read => call_ret1_relu_1_fu_211_ap_return_10,
        data_11_V_read => call_ret1_relu_1_fu_211_ap_return_11,
        data_12_V_read => call_ret1_relu_1_fu_211_ap_return_12,
        data_13_V_read => call_ret1_relu_1_fu_211_ap_return_13,
        data_14_V_read => call_ret1_relu_1_fu_211_ap_return_14,
        data_15_V_read => call_ret1_relu_1_fu_211_ap_return_15,
        data_16_V_read => call_ret1_relu_1_fu_211_ap_return_16,
        data_17_V_read => call_ret1_relu_1_fu_211_ap_return_17,
        data_18_V_read => call_ret1_relu_1_fu_211_ap_return_18,
        data_19_V_read => call_ret1_relu_1_fu_211_ap_return_19,
        data_20_V_read => call_ret1_relu_1_fu_211_ap_return_20,
        data_21_V_read => call_ret1_relu_1_fu_211_ap_return_21,
        data_22_V_read => call_ret1_relu_1_fu_211_ap_return_22,
        data_23_V_read => call_ret1_relu_1_fu_211_ap_return_23,
        data_24_V_read => call_ret1_relu_1_fu_211_ap_return_24,
        data_25_V_read => call_ret1_relu_1_fu_211_ap_return_25,
        data_26_V_read => call_ret1_relu_1_fu_211_ap_return_26,
        data_27_V_read => call_ret1_relu_1_fu_211_ap_return_27,
        data_28_V_read => call_ret1_relu_1_fu_211_ap_return_28,
        data_29_V_read => call_ret1_relu_1_fu_211_ap_return_29,
        data_30_V_read => call_ret1_relu_1_fu_211_ap_return_30,
        data_31_V_read => call_ret1_relu_1_fu_211_ap_return_31,
        data_32_V_read => call_ret1_relu_1_fu_211_ap_return_32,
        data_33_V_read => call_ret1_relu_1_fu_211_ap_return_33,
        data_34_V_read => call_ret1_relu_1_fu_211_ap_return_34,
        data_35_V_read => call_ret1_relu_1_fu_211_ap_return_35,
        data_36_V_read => call_ret1_relu_1_fu_211_ap_return_36,
        data_37_V_read => call_ret1_relu_1_fu_211_ap_return_37,
        data_38_V_read => call_ret1_relu_1_fu_211_ap_return_38,
        data_39_V_read => call_ret1_relu_1_fu_211_ap_return_39,
        data_40_V_read => call_ret1_relu_1_fu_211_ap_return_40,
        data_41_V_read => call_ret1_relu_1_fu_211_ap_return_41,
        data_42_V_read => call_ret1_relu_1_fu_211_ap_return_42,
        data_43_V_read => call_ret1_relu_1_fu_211_ap_return_43,
        data_44_V_read => call_ret1_relu_1_fu_211_ap_return_44,
        data_45_V_read => call_ret1_relu_1_fu_211_ap_return_45,
        data_46_V_read => call_ret1_relu_1_fu_211_ap_return_46,
        data_47_V_read => call_ret1_relu_1_fu_211_ap_return_47,
        data_48_V_read => call_ret1_relu_1_fu_211_ap_return_48,
        data_49_V_read => call_ret1_relu_1_fu_211_ap_return_49,
        ap_return_0 => grp_dense_latency_0_0_0_1_fu_83_ap_return_0,
        ap_return_1 => grp_dense_latency_0_0_0_1_fu_83_ap_return_1,
        ap_return_2 => grp_dense_latency_0_0_0_1_fu_83_ap_return_2,
        ap_return_3 => grp_dense_latency_0_0_0_1_fu_83_ap_return_3,
        ap_return_4 => grp_dense_latency_0_0_0_1_fu_83_ap_return_4,
        ap_return_5 => grp_dense_latency_0_0_0_1_fu_83_ap_return_5,
        ap_return_6 => grp_dense_latency_0_0_0_1_fu_83_ap_return_6,
        ap_return_7 => grp_dense_latency_0_0_0_1_fu_83_ap_return_7,
        ap_return_8 => grp_dense_latency_0_0_0_1_fu_83_ap_return_8,
        ap_return_9 => grp_dense_latency_0_0_0_1_fu_83_ap_return_9,
        ap_return_10 => grp_dense_latency_0_0_0_1_fu_83_ap_return_10,
        ap_return_11 => grp_dense_latency_0_0_0_1_fu_83_ap_return_11,
        ap_return_12 => grp_dense_latency_0_0_0_1_fu_83_ap_return_12,
        ap_return_13 => grp_dense_latency_0_0_0_1_fu_83_ap_return_13,
        ap_return_14 => grp_dense_latency_0_0_0_1_fu_83_ap_return_14,
        ap_return_15 => grp_dense_latency_0_0_0_1_fu_83_ap_return_15,
        ap_return_16 => grp_dense_latency_0_0_0_1_fu_83_ap_return_16,
        ap_return_17 => grp_dense_latency_0_0_0_1_fu_83_ap_return_17,
        ap_return_18 => grp_dense_latency_0_0_0_1_fu_83_ap_return_18,
        ap_return_19 => grp_dense_latency_0_0_0_1_fu_83_ap_return_19,
        ap_return_20 => grp_dense_latency_0_0_0_1_fu_83_ap_return_20,
        ap_return_21 => grp_dense_latency_0_0_0_1_fu_83_ap_return_21,
        ap_return_22 => grp_dense_latency_0_0_0_1_fu_83_ap_return_22,
        ap_return_23 => grp_dense_latency_0_0_0_1_fu_83_ap_return_23,
        ap_return_24 => grp_dense_latency_0_0_0_1_fu_83_ap_return_24,
        ap_return_25 => grp_dense_latency_0_0_0_1_fu_83_ap_return_25,
        ap_return_26 => grp_dense_latency_0_0_0_1_fu_83_ap_return_26,
        ap_return_27 => grp_dense_latency_0_0_0_1_fu_83_ap_return_27,
        ap_return_28 => grp_dense_latency_0_0_0_1_fu_83_ap_return_28,
        ap_return_29 => grp_dense_latency_0_0_0_1_fu_83_ap_return_29,
        ap_return_30 => grp_dense_latency_0_0_0_1_fu_83_ap_return_30,
        ap_return_31 => grp_dense_latency_0_0_0_1_fu_83_ap_return_31,
        ap_return_32 => grp_dense_latency_0_0_0_1_fu_83_ap_return_32,
        ap_return_33 => grp_dense_latency_0_0_0_1_fu_83_ap_return_33,
        ap_return_34 => grp_dense_latency_0_0_0_1_fu_83_ap_return_34,
        ap_return_35 => grp_dense_latency_0_0_0_1_fu_83_ap_return_35,
        ap_return_36 => grp_dense_latency_0_0_0_1_fu_83_ap_return_36,
        ap_return_37 => grp_dense_latency_0_0_0_1_fu_83_ap_return_37,
        ap_return_38 => grp_dense_latency_0_0_0_1_fu_83_ap_return_38,
        ap_return_39 => grp_dense_latency_0_0_0_1_fu_83_ap_return_39,
        ap_return_40 => grp_dense_latency_0_0_0_1_fu_83_ap_return_40,
        ap_return_41 => grp_dense_latency_0_0_0_1_fu_83_ap_return_41,
        ap_return_42 => grp_dense_latency_0_0_0_1_fu_83_ap_return_42,
        ap_return_43 => grp_dense_latency_0_0_0_1_fu_83_ap_return_43,
        ap_return_44 => grp_dense_latency_0_0_0_1_fu_83_ap_return_44,
        ap_return_45 => grp_dense_latency_0_0_0_1_fu_83_ap_return_45,
        ap_return_46 => grp_dense_latency_0_0_0_1_fu_83_ap_return_46,
        ap_return_47 => grp_dense_latency_0_0_0_1_fu_83_ap_return_47,
        ap_return_48 => grp_dense_latency_0_0_0_1_fu_83_ap_return_48,
        ap_return_49 => grp_dense_latency_0_0_0_1_fu_83_ap_return_49,
        ap_ce => grp_dense_latency_0_0_0_1_fu_83_ap_ce);

    grp_dense_latency_0_0_0_2_fu_137 : component dense_latency_0_0_0_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dense_latency_0_0_0_2_fu_137_ap_start,
        ap_done => grp_dense_latency_0_0_0_2_fu_137_ap_done,
        ap_idle => grp_dense_latency_0_0_0_2_fu_137_ap_idle,
        ap_ready => grp_dense_latency_0_0_0_2_fu_137_ap_ready,
        data_V_read => input_V_in_sig,
        ap_return_0 => grp_dense_latency_0_0_0_2_fu_137_ap_return_0,
        ap_return_1 => grp_dense_latency_0_0_0_2_fu_137_ap_return_1,
        ap_return_2 => grp_dense_latency_0_0_0_2_fu_137_ap_return_2,
        ap_return_3 => grp_dense_latency_0_0_0_2_fu_137_ap_return_3,
        ap_return_4 => grp_dense_latency_0_0_0_2_fu_137_ap_return_4,
        ap_return_5 => grp_dense_latency_0_0_0_2_fu_137_ap_return_5,
        ap_return_6 => grp_dense_latency_0_0_0_2_fu_137_ap_return_6,
        ap_return_7 => grp_dense_latency_0_0_0_2_fu_137_ap_return_7,
        ap_return_8 => grp_dense_latency_0_0_0_2_fu_137_ap_return_8,
        ap_return_9 => grp_dense_latency_0_0_0_2_fu_137_ap_return_9,
        ap_return_10 => grp_dense_latency_0_0_0_2_fu_137_ap_return_10,
        ap_return_11 => grp_dense_latency_0_0_0_2_fu_137_ap_return_11,
        ap_return_12 => grp_dense_latency_0_0_0_2_fu_137_ap_return_12,
        ap_return_13 => grp_dense_latency_0_0_0_2_fu_137_ap_return_13,
        ap_return_14 => grp_dense_latency_0_0_0_2_fu_137_ap_return_14,
        ap_return_15 => grp_dense_latency_0_0_0_2_fu_137_ap_return_15,
        ap_return_16 => grp_dense_latency_0_0_0_2_fu_137_ap_return_16,
        ap_return_17 => grp_dense_latency_0_0_0_2_fu_137_ap_return_17,
        ap_return_18 => grp_dense_latency_0_0_0_2_fu_137_ap_return_18,
        ap_return_19 => grp_dense_latency_0_0_0_2_fu_137_ap_return_19,
        ap_return_20 => grp_dense_latency_0_0_0_2_fu_137_ap_return_20,
        ap_return_21 => grp_dense_latency_0_0_0_2_fu_137_ap_return_21,
        ap_return_22 => grp_dense_latency_0_0_0_2_fu_137_ap_return_22,
        ap_return_23 => grp_dense_latency_0_0_0_2_fu_137_ap_return_23,
        ap_return_24 => grp_dense_latency_0_0_0_2_fu_137_ap_return_24,
        ap_return_25 => grp_dense_latency_0_0_0_2_fu_137_ap_return_25,
        ap_return_26 => grp_dense_latency_0_0_0_2_fu_137_ap_return_26,
        ap_return_27 => grp_dense_latency_0_0_0_2_fu_137_ap_return_27,
        ap_return_28 => grp_dense_latency_0_0_0_2_fu_137_ap_return_28,
        ap_return_29 => grp_dense_latency_0_0_0_2_fu_137_ap_return_29,
        ap_return_30 => grp_dense_latency_0_0_0_2_fu_137_ap_return_30,
        ap_return_31 => grp_dense_latency_0_0_0_2_fu_137_ap_return_31,
        ap_return_32 => grp_dense_latency_0_0_0_2_fu_137_ap_return_32,
        ap_return_33 => grp_dense_latency_0_0_0_2_fu_137_ap_return_33,
        ap_return_34 => grp_dense_latency_0_0_0_2_fu_137_ap_return_34,
        ap_return_35 => grp_dense_latency_0_0_0_2_fu_137_ap_return_35,
        ap_return_36 => grp_dense_latency_0_0_0_2_fu_137_ap_return_36,
        ap_return_37 => grp_dense_latency_0_0_0_2_fu_137_ap_return_37,
        ap_return_38 => grp_dense_latency_0_0_0_2_fu_137_ap_return_38,
        ap_return_39 => grp_dense_latency_0_0_0_2_fu_137_ap_return_39,
        ap_return_40 => grp_dense_latency_0_0_0_2_fu_137_ap_return_40,
        ap_return_41 => grp_dense_latency_0_0_0_2_fu_137_ap_return_41,
        ap_return_42 => grp_dense_latency_0_0_0_2_fu_137_ap_return_42,
        ap_return_43 => grp_dense_latency_0_0_0_2_fu_137_ap_return_43,
        ap_return_44 => grp_dense_latency_0_0_0_2_fu_137_ap_return_44,
        ap_return_45 => grp_dense_latency_0_0_0_2_fu_137_ap_return_45,
        ap_return_46 => grp_dense_latency_0_0_0_2_fu_137_ap_return_46,
        ap_return_47 => grp_dense_latency_0_0_0_2_fu_137_ap_return_47,
        ap_return_48 => grp_dense_latency_0_0_0_2_fu_137_ap_return_48,
        ap_return_49 => grp_dense_latency_0_0_0_2_fu_137_ap_return_49,
        ap_ce => grp_dense_latency_0_0_0_2_fu_137_ap_ce);

    grp_dense_latency_0_0_0_s_fu_143 : component dense_latency_0_0_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dense_latency_0_0_0_s_fu_143_ap_start,
        ap_done => grp_dense_latency_0_0_0_s_fu_143_ap_done,
        ap_idle => grp_dense_latency_0_0_0_s_fu_143_ap_idle,
        ap_ready => grp_dense_latency_0_0_0_s_fu_143_ap_ready,
        data_0_V_read => call_ret3_relu_fu_265_ap_return_0,
        data_1_V_read => call_ret3_relu_fu_265_ap_return_1,
        data_2_V_read => call_ret3_relu_fu_265_ap_return_2,
        data_3_V_read => call_ret3_relu_fu_265_ap_return_3,
        data_4_V_read => call_ret3_relu_fu_265_ap_return_4,
        data_5_V_read => call_ret3_relu_fu_265_ap_return_5,
        data_6_V_read => call_ret3_relu_fu_265_ap_return_6,
        data_7_V_read => call_ret3_relu_fu_265_ap_return_7,
        data_8_V_read => call_ret3_relu_fu_265_ap_return_8,
        data_9_V_read => call_ret3_relu_fu_265_ap_return_9,
        data_10_V_read => call_ret3_relu_fu_265_ap_return_10,
        data_11_V_read => call_ret3_relu_fu_265_ap_return_11,
        data_12_V_read => call_ret3_relu_fu_265_ap_return_12,
        data_13_V_read => call_ret3_relu_fu_265_ap_return_13,
        data_14_V_read => call_ret3_relu_fu_265_ap_return_14,
        data_15_V_read => call_ret3_relu_fu_265_ap_return_15,
        data_16_V_read => call_ret3_relu_fu_265_ap_return_16,
        data_17_V_read => call_ret3_relu_fu_265_ap_return_17,
        data_18_V_read => call_ret3_relu_fu_265_ap_return_18,
        data_19_V_read => call_ret3_relu_fu_265_ap_return_19,
        data_20_V_read => call_ret3_relu_fu_265_ap_return_20,
        data_21_V_read => call_ret3_relu_fu_265_ap_return_21,
        data_22_V_read => call_ret3_relu_fu_265_ap_return_22,
        data_23_V_read => call_ret3_relu_fu_265_ap_return_23,
        data_24_V_read => call_ret3_relu_fu_265_ap_return_24,
        data_25_V_read => call_ret3_relu_fu_265_ap_return_25,
        data_26_V_read => call_ret3_relu_fu_265_ap_return_26,
        data_27_V_read => call_ret3_relu_fu_265_ap_return_27,
        data_28_V_read => call_ret3_relu_fu_265_ap_return_28,
        data_29_V_read => call_ret3_relu_fu_265_ap_return_29,
        data_30_V_read => call_ret3_relu_fu_265_ap_return_30,
        data_31_V_read => call_ret3_relu_fu_265_ap_return_31,
        data_32_V_read => call_ret3_relu_fu_265_ap_return_32,
        data_33_V_read => call_ret3_relu_fu_265_ap_return_33,
        data_34_V_read => call_ret3_relu_fu_265_ap_return_34,
        data_35_V_read => call_ret3_relu_fu_265_ap_return_35,
        data_36_V_read => call_ret3_relu_fu_265_ap_return_36,
        data_37_V_read => call_ret3_relu_fu_265_ap_return_37,
        data_38_V_read => call_ret3_relu_fu_265_ap_return_38,
        data_39_V_read => call_ret3_relu_fu_265_ap_return_39,
        data_40_V_read => call_ret3_relu_fu_265_ap_return_40,
        data_41_V_read => call_ret3_relu_fu_265_ap_return_41,
        data_42_V_read => call_ret3_relu_fu_265_ap_return_42,
        data_43_V_read => call_ret3_relu_fu_265_ap_return_43,
        data_44_V_read => call_ret3_relu_fu_265_ap_return_44,
        data_45_V_read => call_ret3_relu_fu_265_ap_return_45,
        data_46_V_read => call_ret3_relu_fu_265_ap_return_46,
        data_47_V_read => call_ret3_relu_fu_265_ap_return_47,
        data_48_V_read => call_ret3_relu_fu_265_ap_return_48,
        data_49_V_read => call_ret3_relu_fu_265_ap_return_49,
        ap_return_0 => grp_dense_latency_0_0_0_s_fu_143_ap_return_0,
        ap_return_1 => grp_dense_latency_0_0_0_s_fu_143_ap_return_1,
        ap_return_2 => grp_dense_latency_0_0_0_s_fu_143_ap_return_2,
        ap_return_3 => grp_dense_latency_0_0_0_s_fu_143_ap_return_3,
        ap_return_4 => grp_dense_latency_0_0_0_s_fu_143_ap_return_4,
        ap_return_5 => grp_dense_latency_0_0_0_s_fu_143_ap_return_5,
        ap_ce => grp_dense_latency_0_0_0_s_fu_143_ap_ce);

    grp_softmax_fu_197 : component softmax
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_softmax_fu_197_ap_start,
        ap_done => grp_softmax_fu_197_ap_done,
        ap_idle => grp_softmax_fu_197_ap_idle,
        ap_ready => grp_softmax_fu_197_ap_ready,
        ap_ce => grp_softmax_fu_197_ap_ce,
        data_0_V_read => grp_dense_latency_0_0_0_s_fu_143_ap_return_0,
        data_1_V_read => grp_dense_latency_0_0_0_s_fu_143_ap_return_1,
        data_2_V_read => grp_dense_latency_0_0_0_s_fu_143_ap_return_2,
        data_3_V_read => grp_dense_latency_0_0_0_s_fu_143_ap_return_3,
        data_4_V_read => grp_dense_latency_0_0_0_s_fu_143_ap_return_4,
        data_5_V_read => grp_dense_latency_0_0_0_s_fu_143_ap_return_5,
        ap_return => grp_softmax_fu_197_ap_return);

    call_ret1_relu_1_fu_211 : component relu_1
    port map (
        ap_ready => call_ret1_relu_1_fu_211_ap_ready,
        data_0_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_0,
        data_1_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_1,
        data_2_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_2,
        data_3_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_3,
        data_4_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_4,
        data_5_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_5,
        data_6_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_6,
        data_7_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_7,
        data_8_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_8,
        data_9_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_9,
        data_10_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_10,
        data_11_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_11,
        data_12_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_12,
        data_13_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_13,
        data_14_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_14,
        data_15_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_15,
        data_16_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_16,
        data_17_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_17,
        data_18_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_18,
        data_19_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_19,
        data_20_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_20,
        data_21_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_21,
        data_22_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_22,
        data_23_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_23,
        data_24_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_24,
        data_25_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_25,
        data_26_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_26,
        data_27_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_27,
        data_28_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_28,
        data_29_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_29,
        data_30_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_30,
        data_31_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_31,
        data_32_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_32,
        data_33_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_33,
        data_34_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_34,
        data_35_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_35,
        data_36_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_36,
        data_37_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_37,
        data_38_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_38,
        data_39_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_39,
        data_40_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_40,
        data_41_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_41,
        data_42_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_42,
        data_43_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_43,
        data_44_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_44,
        data_45_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_45,
        data_46_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_46,
        data_47_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_47,
        data_48_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_48,
        data_49_V_read => grp_dense_latency_0_0_0_2_fu_137_ap_return_49,
        ap_return_0 => call_ret1_relu_1_fu_211_ap_return_0,
        ap_return_1 => call_ret1_relu_1_fu_211_ap_return_1,
        ap_return_2 => call_ret1_relu_1_fu_211_ap_return_2,
        ap_return_3 => call_ret1_relu_1_fu_211_ap_return_3,
        ap_return_4 => call_ret1_relu_1_fu_211_ap_return_4,
        ap_return_5 => call_ret1_relu_1_fu_211_ap_return_5,
        ap_return_6 => call_ret1_relu_1_fu_211_ap_return_6,
        ap_return_7 => call_ret1_relu_1_fu_211_ap_return_7,
        ap_return_8 => call_ret1_relu_1_fu_211_ap_return_8,
        ap_return_9 => call_ret1_relu_1_fu_211_ap_return_9,
        ap_return_10 => call_ret1_relu_1_fu_211_ap_return_10,
        ap_return_11 => call_ret1_relu_1_fu_211_ap_return_11,
        ap_return_12 => call_ret1_relu_1_fu_211_ap_return_12,
        ap_return_13 => call_ret1_relu_1_fu_211_ap_return_13,
        ap_return_14 => call_ret1_relu_1_fu_211_ap_return_14,
        ap_return_15 => call_ret1_relu_1_fu_211_ap_return_15,
        ap_return_16 => call_ret1_relu_1_fu_211_ap_return_16,
        ap_return_17 => call_ret1_relu_1_fu_211_ap_return_17,
        ap_return_18 => call_ret1_relu_1_fu_211_ap_return_18,
        ap_return_19 => call_ret1_relu_1_fu_211_ap_return_19,
        ap_return_20 => call_ret1_relu_1_fu_211_ap_return_20,
        ap_return_21 => call_ret1_relu_1_fu_211_ap_return_21,
        ap_return_22 => call_ret1_relu_1_fu_211_ap_return_22,
        ap_return_23 => call_ret1_relu_1_fu_211_ap_return_23,
        ap_return_24 => call_ret1_relu_1_fu_211_ap_return_24,
        ap_return_25 => call_ret1_relu_1_fu_211_ap_return_25,
        ap_return_26 => call_ret1_relu_1_fu_211_ap_return_26,
        ap_return_27 => call_ret1_relu_1_fu_211_ap_return_27,
        ap_return_28 => call_ret1_relu_1_fu_211_ap_return_28,
        ap_return_29 => call_ret1_relu_1_fu_211_ap_return_29,
        ap_return_30 => call_ret1_relu_1_fu_211_ap_return_30,
        ap_return_31 => call_ret1_relu_1_fu_211_ap_return_31,
        ap_return_32 => call_ret1_relu_1_fu_211_ap_return_32,
        ap_return_33 => call_ret1_relu_1_fu_211_ap_return_33,
        ap_return_34 => call_ret1_relu_1_fu_211_ap_return_34,
        ap_return_35 => call_ret1_relu_1_fu_211_ap_return_35,
        ap_return_36 => call_ret1_relu_1_fu_211_ap_return_36,
        ap_return_37 => call_ret1_relu_1_fu_211_ap_return_37,
        ap_return_38 => call_ret1_relu_1_fu_211_ap_return_38,
        ap_return_39 => call_ret1_relu_1_fu_211_ap_return_39,
        ap_return_40 => call_ret1_relu_1_fu_211_ap_return_40,
        ap_return_41 => call_ret1_relu_1_fu_211_ap_return_41,
        ap_return_42 => call_ret1_relu_1_fu_211_ap_return_42,
        ap_return_43 => call_ret1_relu_1_fu_211_ap_return_43,
        ap_return_44 => call_ret1_relu_1_fu_211_ap_return_44,
        ap_return_45 => call_ret1_relu_1_fu_211_ap_return_45,
        ap_return_46 => call_ret1_relu_1_fu_211_ap_return_46,
        ap_return_47 => call_ret1_relu_1_fu_211_ap_return_47,
        ap_return_48 => call_ret1_relu_1_fu_211_ap_return_48,
        ap_return_49 => call_ret1_relu_1_fu_211_ap_return_49);

    call_ret3_relu_fu_265 : component relu
    port map (
        ap_ready => call_ret3_relu_fu_265_ap_ready,
        data_0_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_0,
        data_1_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_1,
        data_2_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_2,
        data_3_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_3,
        data_4_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_4,
        data_5_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_5,
        data_6_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_6,
        data_7_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_7,
        data_8_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_8,
        data_9_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_9,
        data_10_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_10,
        data_11_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_11,
        data_12_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_12,
        data_13_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_13,
        data_14_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_14,
        data_15_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_15,
        data_16_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_16,
        data_17_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_17,
        data_18_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_18,
        data_19_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_19,
        data_20_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_20,
        data_21_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_21,
        data_22_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_22,
        data_23_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_23,
        data_24_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_24,
        data_25_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_25,
        data_26_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_26,
        data_27_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_27,
        data_28_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_28,
        data_29_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_29,
        data_30_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_30,
        data_31_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_31,
        data_32_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_32,
        data_33_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_33,
        data_34_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_34,
        data_35_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_35,
        data_36_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_36,
        data_37_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_37,
        data_38_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_38,
        data_39_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_39,
        data_40_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_40,
        data_41_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_41,
        data_42_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_42,
        data_43_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_43,
        data_44_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_44,
        data_45_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_45,
        data_46_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_46,
        data_47_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_47,
        data_48_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_48,
        data_49_V_read => grp_dense_latency_0_0_0_1_fu_83_ap_return_49,
        ap_return_0 => call_ret3_relu_fu_265_ap_return_0,
        ap_return_1 => call_ret3_relu_fu_265_ap_return_1,
        ap_return_2 => call_ret3_relu_fu_265_ap_return_2,
        ap_return_3 => call_ret3_relu_fu_265_ap_return_3,
        ap_return_4 => call_ret3_relu_fu_265_ap_return_4,
        ap_return_5 => call_ret3_relu_fu_265_ap_return_5,
        ap_return_6 => call_ret3_relu_fu_265_ap_return_6,
        ap_return_7 => call_ret3_relu_fu_265_ap_return_7,
        ap_return_8 => call_ret3_relu_fu_265_ap_return_8,
        ap_return_9 => call_ret3_relu_fu_265_ap_return_9,
        ap_return_10 => call_ret3_relu_fu_265_ap_return_10,
        ap_return_11 => call_ret3_relu_fu_265_ap_return_11,
        ap_return_12 => call_ret3_relu_fu_265_ap_return_12,
        ap_return_13 => call_ret3_relu_fu_265_ap_return_13,
        ap_return_14 => call_ret3_relu_fu_265_ap_return_14,
        ap_return_15 => call_ret3_relu_fu_265_ap_return_15,
        ap_return_16 => call_ret3_relu_fu_265_ap_return_16,
        ap_return_17 => call_ret3_relu_fu_265_ap_return_17,
        ap_return_18 => call_ret3_relu_fu_265_ap_return_18,
        ap_return_19 => call_ret3_relu_fu_265_ap_return_19,
        ap_return_20 => call_ret3_relu_fu_265_ap_return_20,
        ap_return_21 => call_ret3_relu_fu_265_ap_return_21,
        ap_return_22 => call_ret3_relu_fu_265_ap_return_22,
        ap_return_23 => call_ret3_relu_fu_265_ap_return_23,
        ap_return_24 => call_ret3_relu_fu_265_ap_return_24,
        ap_return_25 => call_ret3_relu_fu_265_ap_return_25,
        ap_return_26 => call_ret3_relu_fu_265_ap_return_26,
        ap_return_27 => call_ret3_relu_fu_265_ap_return_27,
        ap_return_28 => call_ret3_relu_fu_265_ap_return_28,
        ap_return_29 => call_ret3_relu_fu_265_ap_return_29,
        ap_return_30 => call_ret3_relu_fu_265_ap_return_30,
        ap_return_31 => call_ret3_relu_fu_265_ap_return_31,
        ap_return_32 => call_ret3_relu_fu_265_ap_return_32,
        ap_return_33 => call_ret3_relu_fu_265_ap_return_33,
        ap_return_34 => call_ret3_relu_fu_265_ap_return_34,
        ap_return_35 => call_ret3_relu_fu_265_ap_return_35,
        ap_return_36 => call_ret3_relu_fu_265_ap_return_36,
        ap_return_37 => call_ret3_relu_fu_265_ap_return_37,
        ap_return_38 => call_ret3_relu_fu_265_ap_return_38,
        ap_return_39 => call_ret3_relu_fu_265_ap_return_39,
        ap_return_40 => call_ret3_relu_fu_265_ap_return_40,
        ap_return_41 => call_ret3_relu_fu_265_ap_return_41,
        ap_return_42 => call_ret3_relu_fu_265_ap_return_42,
        ap_return_43 => call_ret3_relu_fu_265_ap_return_43,
        ap_return_44 => call_ret3_relu_fu_265_ap_return_44,
        ap_return_45 => call_ret3_relu_fu_265_ap_return_45,
        ap_return_46 => call_ret3_relu_fu_265_ap_return_46,
        ap_return_47 => call_ret3_relu_fu_265_ap_return_47,
        ap_return_48 => call_ret3_relu_fu_265_ap_return_48,
        ap_return_49 => call_ret3_relu_fu_265_ap_return_49);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    grp_dense_latency_0_0_0_1_fu_83_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dense_latency_0_0_0_1_fu_83_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then 
                    grp_dense_latency_0_0_0_1_fu_83_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dense_latency_0_0_0_1_fu_83_ap_ready = ap_const_logic_1)) then 
                    grp_dense_latency_0_0_0_1_fu_83_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dense_latency_0_0_0_s_fu_143_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dense_latency_0_0_0_s_fu_143_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    grp_dense_latency_0_0_0_s_fu_143_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dense_latency_0_0_0_s_fu_143_ap_ready = ap_const_logic_1)) then 
                    grp_dense_latency_0_0_0_s_fu_143_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_softmax_fu_197_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_softmax_fu_197_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_softmax_fu_197_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_softmax_fu_197_ap_ready = ap_const_logic_1)) then 
                    grp_softmax_fu_197_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    input_V_ap_vld_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                input_V_ap_vld_preg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    input_V_ap_vld_preg <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (input_V_ap_vld = ap_const_logic_1))) then 
                    input_V_ap_vld_preg <= input_V_ap_vld;
                end if; 
            end if;
        end if;
    end process;


    input_V_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                input_V_preg <= ap_const_lv864_lc_1;
            else
                if ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (input_V_ap_vld = ap_const_logic_1))) then 
                    input_V_preg <= input_V;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_block_pp0_stage3_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to2, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0_1to2 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_reset_idle_pp0 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, input_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (input_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp120_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, input_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp120 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (input_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp14_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, input_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp14 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (input_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp226_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, input_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp226 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (input_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, input_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (input_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001_ignoreCallOp121 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001_ignoreCallOp15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001_ignoreCallOp227 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001_ignoreCallOp234 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001_ignoreCallOp122 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001_ignoreCallOp16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001_ignoreCallOp224 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001_ignoreCallOp235 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001_ignoreCallOp119 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001_ignoreCallOp17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001_ignoreCallOp225 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001_ignoreCallOp246 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter2_ignore_call11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter2_ignore_call113 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter2_ignore_call215 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter2_ignore_call222 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage2_iter2_ignore_call11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage2_iter2_ignore_call113 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage2_iter2_ignore_call215 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage2_iter2_ignore_call222 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage3_iter2_ignore_call11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage3_iter2_ignore_call113 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage3_iter2_ignore_call215 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage3_iter2_ignore_call222 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, input_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (input_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call11_assign_proc : process(ap_start, input_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call11 <= ((ap_start = ap_const_logic_0) or (input_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call113_assign_proc : process(ap_start, input_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call113 <= ((ap_start = ap_const_logic_0) or (input_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call215_assign_proc : process(ap_start, input_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call215 <= ((ap_start = ap_const_logic_0) or (input_V_ap_vld_in_sig = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0_ignore_call11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0_ignore_call113 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0_ignore_call215 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0_ignore_call222 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0_ignore_call11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0_ignore_call113 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0_ignore_call215 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0_ignore_call222 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0_ignore_call11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0_ignore_call113 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0_ignore_call215 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0_ignore_call222 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1_ignore_call11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1_ignore_call113 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1_ignore_call215 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter1_ignore_call11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter1_ignore_call113 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter1_ignore_call215 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter1_ignore_call222 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage2_iter1_ignore_call11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage2_iter1_ignore_call113 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage2_iter1_ignore_call215 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage2_iter1_ignore_call222 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage3_iter1_ignore_call11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage3_iter1_ignore_call113 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage3_iter1_ignore_call215 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage3_iter1_ignore_call222 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter2_ignore_call11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter2_ignore_call113 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter2_ignore_call215 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to2_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to2 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to1 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    const_size_in_1 <= ap_const_lv16_24;

    const_size_in_1_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            const_size_in_1_ap_vld <= ap_const_logic_1;
        else 
            const_size_in_1_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    const_size_out_1 <= ap_const_lv16_6;

    const_size_out_1_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            const_size_out_1_ap_vld <= ap_const_logic_1;
        else 
            const_size_out_1_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    grp_dense_latency_0_0_0_1_fu_83_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage3_11001_ignoreCallOp119, ap_block_pp0_stage0_11001_ignoreCallOp120, ap_block_pp0_stage1_11001_ignoreCallOp121, ap_block_pp0_stage2_11001_ignoreCallOp122, ap_CS_fsm_pp0_stage1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001_ignoreCallOp119) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001_ignoreCallOp121) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp120) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001_ignoreCallOp122) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_dense_latency_0_0_0_1_fu_83_ap_ce <= ap_const_logic_1;
        else 
            grp_dense_latency_0_0_0_1_fu_83_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_dense_latency_0_0_0_1_fu_83_ap_start <= grp_dense_latency_0_0_0_1_fu_83_ap_start_reg;

    grp_dense_latency_0_0_0_2_fu_137_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001_ignoreCallOp14, ap_block_pp0_stage1_11001_ignoreCallOp15, ap_block_pp0_stage2_11001_ignoreCallOp16, ap_block_pp0_stage3_11001_ignoreCallOp17)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001_ignoreCallOp17) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001_ignoreCallOp15) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp14) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001_ignoreCallOp16) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_dense_latency_0_0_0_2_fu_137_ap_ce <= ap_const_logic_1;
        else 
            grp_dense_latency_0_0_0_2_fu_137_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_dense_latency_0_0_0_2_fu_137_ap_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_dense_latency_0_0_0_2_fu_137_ap_start <= ap_const_logic_1;
        else 
            grp_dense_latency_0_0_0_2_fu_137_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    grp_dense_latency_0_0_0_s_fu_143_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage2_11001_ignoreCallOp224, ap_block_pp0_stage3_11001_ignoreCallOp225, ap_block_pp0_stage0_11001_ignoreCallOp226, ap_block_pp0_stage1_11001_ignoreCallOp227)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001_ignoreCallOp225) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001_ignoreCallOp227) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp226) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001_ignoreCallOp224) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_dense_latency_0_0_0_s_fu_143_ap_ce <= ap_const_logic_1;
        else 
            grp_dense_latency_0_0_0_s_fu_143_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_dense_latency_0_0_0_s_fu_143_ap_start <= grp_dense_latency_0_0_0_s_fu_143_ap_start_reg;

    grp_softmax_fu_197_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001_ignoreCallOp234, ap_block_pp0_stage2_11001_ignoreCallOp235, ap_block_pp0_stage3_11001_ignoreCallOp246)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001_ignoreCallOp246) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001_ignoreCallOp234) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001_ignoreCallOp235) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_softmax_fu_197_ap_ce <= ap_const_logic_1;
        else 
            grp_softmax_fu_197_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_softmax_fu_197_ap_start <= grp_softmax_fu_197_ap_start_reg;

    input_V_ap_vld_in_sig_assign_proc : process(input_V_ap_vld, input_V_ap_vld_preg)
    begin
        if ((input_V_ap_vld = ap_const_logic_1)) then 
            input_V_ap_vld_in_sig <= input_V_ap_vld;
        else 
            input_V_ap_vld_in_sig <= input_V_ap_vld_preg;
        end if; 
    end process;


    input_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, input_V_ap_vld, ap_block_pp0_stage0)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            input_V_blk_n <= input_V_ap_vld;
        else 
            input_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    input_V_in_sig_assign_proc : process(input_V, input_V_preg, input_V_ap_vld)
    begin
        if ((input_V_ap_vld = ap_const_logic_1)) then 
            input_V_in_sig <= input_V;
        else 
            input_V_in_sig <= input_V_preg;
        end if; 
    end process;

    layer7_out_V <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_softmax_fu_197_ap_return),144));

    layer7_out_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            layer7_out_V_ap_vld <= ap_const_logic_1;
        else 
            layer7_out_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
